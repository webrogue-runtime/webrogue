#pragma once
// GENERATED BY webrogue-event-apigen. DO NOT EDIT MANUALLY
// clang-format off
#include <stdint.h>
#include <stdlib.h>

typedef struct webrogue_event_out_buf {
    void* buf;
    uint32_t buf_size;
    uint32_t used_size;
} webrogue_event_out_buf;

#define WEBROGUE_MAX_ENCODED_EVENT_SIZE 20

static webrogue_event_out_buf webrogue_event_out_buf_create(void) {
    webrogue_event_out_buf result;
    result.buf = malloc(WEBROGUE_MAX_ENCODED_EVENT_SIZE);
    result.buf_size = WEBROGUE_MAX_ENCODED_EVENT_SIZE;
    result.used_size = 0;
    return result;
}

static void webrogue_event_out_buf_delete(webrogue_event_out_buf buf) {
    free(buf.buf);
}

#define BUF_SIZE(LEN) if(out->buf_size < (out->used_size + LEN)) { out->buf_size *= 2; out->buf = realloc(out->buf, out->buf_size); }; char* current_pointer = ((char*)out->buf) + out->used_size; out->used_size += LEN
#define SET(TYPE, OFFSET, VALUE) *((TYPE*)(current_pointer + OFFSET)) = VALUE

static inline void webrogue_event_encode_mouse_button(webrogue_event_out_buf *out, uint32_t button, uint8_t down, uint32_t x, uint32_t y) {
    BUF_SIZE(20);
    SET(uint32_t, 0, 1);
    SET(uint32_t, 4, button);
    SET(uint8_t, 16, down);
    SET(uint32_t, 8, x);
    SET(uint32_t, 12, y);
}
static inline void webrogue_event_encode_mouse_motion(webrogue_event_out_buf *out, uint32_t x, uint32_t y) {
    BUF_SIZE(12);
    SET(uint32_t, 0, 2);
    SET(uint32_t, 4, x);
    SET(uint32_t, 8, y);
}
static inline void webrogue_event_encode_key(webrogue_event_out_buf *out, uint8_t down, uint32_t scancode) {
    BUF_SIZE(12);
    SET(uint32_t, 0, 3);
    SET(uint8_t, 8, down);
    SET(uint32_t, 4, scancode);
}
static inline void webrogue_event_encode_quit(webrogue_event_out_buf *out) {
    BUF_SIZE(4);
    SET(uint32_t, 0, 4);
}
static inline void webrogue_event_encode_window_resized(webrogue_event_out_buf *out) {
    BUF_SIZE(4);
    SET(uint32_t, 0, 5);
}
static inline void webrogue_event_encode_gl_resized(webrogue_event_out_buf *out) {
    BUF_SIZE(4);
    SET(uint32_t, 0, 6);
}

#undef BUF_SIZE
#undef SET
