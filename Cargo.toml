[package]
name = "webrogue"
version.workspace = true
authors.workspace = true
edition.workspace = true
default-run = "webrogue-default-runtime"

[[bin]]
name = "webrogue-default-runtime"
path = "crates/default-runtime/src/main_workspace.rs"
doc = false

[features]
default = ["gl", "cranelift"]
gl = ["webrogue-default-runtime/gl"]
singlepass = ["webrogue-default-runtime/singlepass"]
cranelift = ["webrogue-default-runtime/cranelift"]
llvm = ["webrogue-default-runtime/llvm"]
wamr = ["webrogue-default-runtime/wamr"]
aot = ["webrogue-default-runtime/aot"]

[dependencies]
webrogue-default-runtime = { workspace = true }
anyhow = { workspace = true }

[workspace.package]
version = "0.1.0"
authors = ["Artem Borovik"]
edition = "2021"

[workspace]
resolver = '2'
members = [
  "crates/aot-compiler",
  "crates/aot-data",
  "crates/aot-lib",
  "crates/aot-linker",
  "crates/default-runtime",
  "crates/gfx",
  "crates/gfx-fallback",
  "crates/gl",
  "crates/gl-bindgen",
  "crates/runtime",
  "crates/wrapp",
  "crates/wrapp-cli",

  "android/runtime/common/src/main/rust",

  # "web/crates/backend-web",
  # "web/crates/backend-web-macro",
  # "web/crates/main",

  "apple/runtime/ios/rust",
  "apple/runtime/macos/rust",
]
exclude = [
  "external/wasmer",
  "web/crates/web",
]

[workspace.dependencies]
# Webrogue crates
webrogue-aot-compiler = { path = "crates/aot-compiler" }
webrogue-aot-data = { path = "crates/aot-data" }
webrogue-aot-linker = { path = "crates/aot-linker" }
webrogue-default-runtime = { path = "crates/default-runtime" }
webrogue-runtime = { path = "crates/runtime" }
webrogue-gl = { path = "crates/gl" }
webrogue-gfx = { path = "crates/gfx" }
webrogue-gfx-fallback = { path = "crates/gfx-fallback" }
webrogue-wrapp = { path = "crates/wrapp" }

# Platform-specific crates
# webrogue-backend-web = { path = "web/crates/backend-web" }
# webrogue-backend-web-macro = { path = "web/crates/backend-web-macro" }

# Wasmer crates
wasmer = { path = "external/wasmer/lib/api", default-features = false }
wasmer-wasix = { path = "external/wasmer/lib/wasix" }
wasmer-compiler = { path = "external/wasmer/lib/compiler" }
wasmer-compiler-cranelift = { path = "external/wasmer/lib/compiler-cranelift" }
wasmer-package = { path = "external/wasmer/lib/package" }
wasmer-types = { path = "external/wasmer/lib/types" }
virtual-fs = { path = "external/wasmer/lib/virtual-fs" }
webc = { version = "7.0.0-rc.1" }

clap = { version = "4" }
futures =  { version = "0.3" }
wasmparser = { version = ">=0.215" }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
anyhow = { version = "1" }
zstd-seekable = { version = "0.1.23" }
cc = { version = "1" }
tokio = { version = "1" }
cmake = { version = "0.1" }

[profile.release-lto]
inherits = "release"
lto = true
panic = "abort"
codegen-units = 1
opt-level = 3
strip = true
