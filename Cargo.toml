[package]
name = "webrogue"
version.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
default-run = "webrogue"

[[bin]]
name = "webrogue"
path = "main.rs"
doc = false

[features]
default = ["run", "compile", "pack"]
full = ["run", "compile", "pack", "appended_artifacts", "llvm"]

run = ["webrogue-cli/run"]
compile = ["webrogue-cli/compile"]
pack = ["webrogue-cli/pack"]

# to use this feature, you need to process resulting binary 
# using append_artifacts.py script, so it is disabled by default
appended_artifacts = ["webrogue-cli/appended_artifacts"]

# llvm feature is disabled by default so rust-analyzer don't
# have to wait while LLVM compiles
llvm = ["webrogue-cli/llvm"]

[dependencies]
webrogue-cli = { workspace = true }
anyhow = { workspace = true }
clap = { workspace = true, features = ["derive"] }

[workspace.package]
version = "0.1.0"
authors = ["Artem Borovik"]
license = "Apache-2.0 WITH LLVM-exception"
edition = "2021"

[workspace]
resolver = '2'
members = [
  "crates/aot-compiler",
  "crates/aot-data",
  "crates/aot-lib",
  "crates/aot-linker",
  "crates/cli",
  "crates/event-apigen",
  "crates/gfx",
  "crates/gfx-fallback",
  "crates/gfxstream",
  "crates/wasip1",
  "crates/wasmtime",
  "crates/web-macro",
  "crates/web",
  "crates/wrapp",

  "android/runtime/common/src/main/rust",

  "apple/runtime/ios/rust",
  "apple/runtime/macos/rust",
]
exclude = [
  "external/wasmtime",
]

[workspace.dependencies]
# Webrogue crates
webrogue-aot-compiler = { path = "crates/aot-compiler", default-features=false }
webrogue-aot-data = { path = "crates/aot-data" }
webrogue-aot-linker = { path = "crates/aot-linker" }
webrogue-cli = { path = "crates/cli" }
webrogue-wasmtime = { path = "crates/wasmtime" }
webrogue-gfx = { path = "crates/gfx" }
webrogue-gfx-fallback = { path = "crates/gfx-fallback" }
webrogue-gfxstream = { path = "crates/gfxstream" }
webrogue-wasip1 = { path = "crates/wasip1" }
webrogue-wrapp = { path = "crates/wrapp" }

# Platform-specific crates
webrogue-web-macro = { path = "crates/web-macro" }

# Wasmtime
wasmtime = { path = "external/wasmtime/crates/wasmtime", default-features = false }
wiggle = { path = "external/wasmtime/crates/wiggle", default-features = false }
wasi-common = { path = "external/wasmtime/crates/wasi-common", default-features = false }
wasmtime-environ = { path = "external/wasmtime/crates/environ", default-features = false }
wiggle-generate = { path = "external/wasmtime/crates/wiggle/generate", default-features = false }

image = { version = "0.25", default-features = false }
imageproc = { version = "0.25", default-features = false }
object = { version = "0.36.5", default-features = false }
clap = { version = "4" }
futures =  { version = "0.3" }
wasmparser = { version = ">=0.215" }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
anyhow = { version = "1" }
zstd-safe = { version = "^7.2.4", default-features = false }
zstd = { version = "^0.13.2", default-features = false }
cc = { version = "1" }
tokio = { version = "1" }
cmake = { version = "0.1" }
target-lexicon = { version = "^0.12", default-features = false }
semver = { version = "1", default-features = false }
postcard = { version = "1", default-features = false }
quote = { version = "1.0", default-features = false }
syn = { version = "2.0.25", default-features = false }
proc-macro2 = { version = "1.0", default-features = false }
witx = { version = "0.9.1", default-features = false }
dirs = { version = "6.0.0" }
zip = { version = "2.6.1", default-features = false }

reqwest = { version = "0.12" }
zip-extract = { version = "0.2" }

# Profile for release builds of webrogue-aot-lib static library
[profile.aot]
inherits = "release"
lto = true
panic = "abort"
codegen-units = 1
opt-level = 3
strip = "debuginfo"

# Profile for release builds of CLI utility
[profile.cli]
inherits = "release"
lto = true
panic = "abort"
codegen-units = 1
opt-level = 3
strip = "debuginfo"

[profile.dev.package.cranelift-codegen]
opt-level = 3
# codegen-units = 1

[profile.dev.package.gimli]
opt-level = 3
codegen-units = 1
