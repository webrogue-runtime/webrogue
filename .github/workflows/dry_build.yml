name: Dry build

on:
  push:

jobs:
  macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Submodules
      run: |
        git submodule update --init external/wasmtime
    
    - name: Setup
      run: |
        rustup target add x86_64-apple-darwin
        rustup target add aarch64-apple-darwin
        brew install xcodegen
        sh apple/setup.command

    - name: Build
      shell: sh # does not works on zsh
      run: |
        XCODEBUILD_FLAGS="-destination generic/platform=macOS -workspace apple/webrogue.xcworkspace -scheme MacOS_ReleaseLocal -configuration ReleaseLocal"
        XC_BUILD_DIR=$(xcodebuild $XCODEBUILD_FLAGS -showBuildSettings | grep -m 1 "BUILT_PRODUCTS_DIR =" | grep -oEi "\/.*" || exit 3)
        xcodebuild $XCODEBUILD_FLAGS -parallelizeTargets -allowProvisioningUpdates
        du -h -d 0 $XC_BUILD_DIR/webrogue\ Launcher.app

  ios:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Submodules
      run: |
        git submodule update --init external/wasmtime
    
    - name: Setup
      run: |
        rustup target add aarch64-apple-ios
        rustup target add x86_64-apple-ios
        rustup target add aarch64-apple-ios-sim
        brew install xcodegen
        sh apple/setup.command

    - name: Build
      shell: sh # does not works on zsh
      run: |
        XCODEBUILD_FLAGS="-workspace apple/webrogue.xcworkspace -scheme iOS_ReleaseLocal -configuration ReleaseLocal -destination"
        XCODEBUILD_DESTINATION_FLAGS="generic/platform=iOS Simulator"
        XC_BUILD_DIR=$(xcodebuild $XCODEBUILD_FLAGS "$XCODEBUILD_DESTINATION_FLAGS" -showBuildSettings | grep -m 1 "BUILT_PRODUCTS_DIR =" | grep -oEi "\/.*" || exit 3)
        xcodebuild $XCODEBUILD_FLAGS "$XCODEBUILD_DESTINATION_FLAGS" -parallelizeTargets -allowProvisioningUpdates
        XC_BUILD_DIR=$(echo $XC_BUILD_DIR | sed "s/iphoneos/iphonesimulator/")
        du -h -d 0 $XC_BUILD_DIR/webrogue.app

  web:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Submodules
      run: |
        git submodule update --init external/wasmtime
        git submodule update --init --single-branch examples

    - name: Setup
      run: |
        rustup toolchain install nightly
        rustup component add rust-src --toolchain nightly
        git clone https://github.com/emscripten-core/emsdk.git
        ./emsdk/emsdk install latest
        ./emsdk/emsdk activate latest

    - name: Build Wrapps
      run: |
        make -C examples

    - name: Build
      run: |
        . ./emsdk/emsdk_env.sh
        sh web/build.sh
        du -h web/root/webrogue.wasm web/root/webrogue.js

  android:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Submodules
      run: |
        git submodule update --init --single-branch external/wasmtime
        git submodule update --init --single-branch examples
    
    - name: Setup
      run: |
        rustup target add aarch64-linux-android
        rustup target add x86_64-linux-android

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build Wrapps
      run: |
        make -C examples

    - name: Build
      run: |
        cd android
        ./gradlew --no-daemon assembleRelease
        cd ..
        du -h android/app/build/outputs/apk/release/app-release-unsigned.apk
